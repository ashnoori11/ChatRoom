// <auto-generated />
using System;
using ChatRoom.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChatRoom.Data.Migrations
{
    [DbContext(typeof(ChatRoomContext))]
    [Migration("20220120171014_firstBuild")]
    partial class firstBuild
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ChatRoom.Domain.Models.ChatMessage", b =>
                {
                    b.Property<Guid?>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MessageBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("SendAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SenderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MessageId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("ChatRoom.Domain.Models.Room", b =>
                {
                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OwnerConnectionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("ChatRoom.Domain.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChatRoom.Domain.Models.User_Room", b =>
                {
                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RoomId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("User_Rooms");
                });

            modelBuilder.Entity("ChatRoom.Domain.Models.ChatMessage", b =>
                {
                    b.HasOne("ChatRoom.Domain.Models.Room", "Room")
                        .WithMany("ChatMessages")
                        .HasForeignKey("RoomId");

                    b.HasOne("ChatRoom.Domain.Models.User", "User")
                        .WithMany("ChatMessages")
                        .HasForeignKey("UserId");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChatRoom.Domain.Models.User_Room", b =>
                {
                    b.HasOne("ChatRoom.Domain.Models.Room", "Room")
                        .WithMany("User_Rooms")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChatRoom.Domain.Models.User", "User")
                        .WithMany("User_Rooms")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChatRoom.Domain.Models.Room", b =>
                {
                    b.Navigation("ChatMessages");

                    b.Navigation("User_Rooms");
                });

            modelBuilder.Entity("ChatRoom.Domain.Models.User", b =>
                {
                    b.Navigation("ChatMessages");

                    b.Navigation("User_Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
